/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiComponents.PHC;

import BloodBank.BloodUserClass;
import BloodBank.BloodUserDirectory;
import BloodBank.RequestBlood;
import BloodBank.RequestBloodDirectory;
import Business.EcoSystem;
import Bussiness.model.PHC.DoctorDirectory;
import Bussiness.model.PHC.EMTDirectory;
import Bussiness.model.PHC.EncounterHistory;
import Bussiness.model.PHC.HospitalDirectory;
import Bussiness.model.PHC.PatientDirectory;
import Bussiness.model.PHC.PersonDirectory;
import Bussiness.model.PHC.UserAccount;
import Bussiness.model.PHC.VitalSigns;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author foram
 */
public class NewsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewsJPanel
     */
    
    public String pageName = "";
    public String content = "";
    
    
    private javax.swing.JSplitPane jSplitPane1;

    /**
     * Creates new form CreateJPanel
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    EncounterHistory encounterHistory;
    HospitalDirectory hospitalDirectory;
    DoctorDirectory doctorDirectory;
    EcoSystem business;
    UserAccount account;
    VitalSigns vitalSigns;

    BloodUserClass blood;
    BloodUserDirectory bloodUserDirectory;
    RequestBlood rb;
    RequestBloodDirectory rbd;

    EMTDirectory eMTDirectory;
    
    public NewsJPanel(javax.swing.JSplitPane jSplitPane1, UserAccount account, EcoSystem business, PersonDirectory personDirectory, PatientDirectory patientDirectory, EncounterHistory encounterHistory, DoctorDirectory doctorDirectory, HospitalDirectory hospitalDirectory, VitalSigns vitalSigns, EMTDirectory eMTDirectory, BloodUserClass blood, BloodUserDirectory bloodUserDirectory, RequestBlood rb, RequestBloodDirectory rbd) throws Exception {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        this.hospitalDirectory = hospitalDirectory;
        this.jSplitPane1 = jSplitPane1;
        this.doctorDirectory = doctorDirectory;
        this.business = business;
        this.vitalSigns = vitalSigns;
        this.bloodUserDirectory = bloodUserDirectory;
        this.blood = blood;
        this.rb = rb;
        this.rbd = rbd;
        this.personDirectory = personDirectory;
        this.eMTDirectory = eMTDirectory;
        
        displayNewsTableDetails();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Today's News");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Content"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setText("Back<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        ViewJPanel viewPane = new ViewJPanel(jSplitPane1, account, business, personDirectory, patientDirectory, encounterHistory, doctorDirectory, hospitalDirectory, vitalSigns, eMTDirectory, blood, bloodUserDirectory, rb, rbd);
        jSplitPane1.setRightComponent(viewPane);
    }//GEN-LAST:event_jButton1ActionPerformed

	private static final String USER_AGENT = "Mozilla/5.0";

	private static final String GET_URL = "https://www.healthcare.gov/glossary/childrens-health-insurance-program-chip.json";

	//private static final String POST_URL = "https://www.healthcare.gov/glossary/childrens-health-insurance-program-chip.json";

	private static String sendGET() throws IOException {
            String result ="";
            URL obj = new URL(GET_URL);
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("User-Agent", USER_AGENT);
            int responseCode = con.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) { // success
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuffer response = new StringBuffer();

                while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                }
                in.close();
                result = response.toString();
            } else {
                System.out.println("GET request did not work.");
            }
            return result;
	}
        
    private void displayNewsTableDetails() throws IOException {
         String response=sendGET();
            ObjectMapper objectMapper = new ObjectMapper();
            ObjectNode o= objectMapper.readValue(response,ObjectNode.class);
            if(o.has("page_name") && o.has("content")){
                pageName=String.valueOf(o.get("page_name"));
                content = String.valueOf(o.get("content"));
            }
        String[] columns=new String [] {
                "Name", "Content"
            };
        Object[][] data=new Object[][]{
            { pageName,content  }
        };
        DefaultTableModel tblmodel = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel t=new DefaultTableModel(data, columns);
        tblmodel.setRowCount(0);
        jTable1=new JTable(t);
            jScrollPane1.setViewportView(jTable1);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
