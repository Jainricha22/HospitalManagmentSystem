package uiComponents.PHC;

import Business.EcoSystem;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Bussiness.model.PHC.Doctor;
import Bussiness.model.PHC.DoctorDirectory;
import Bussiness.model.PHC.EncounterHistory;
import Bussiness.model.PHC.Hospital;
import Bussiness.model.PHC.HospitalDirectory;
import Bussiness.model.PHC.House;
import Bussiness.model.PHC.PatientDirectory;
import Bussiness.model.PHC.Person;
import Bussiness.model.PHC.PersonDirectory;
import Bussiness.model.PHC.UserAccount;
import javax.swing.JSplitPane;
import validations.VerifyNumber;
import validations.VerifyString;

/**
 *
 * @author foram
 */
public class SystemAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminJPanel
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    EncounterHistory encounterHistory;
    DoctorDirectory doctorDirectory;
    HospitalDirectory hospitalDirectory;
    UserAccount account;
    EcoSystem business;

    public SystemAdminJPanel(JSplitPane jSplitPane11, UserAccount account, EcoSystem business, PersonDirectory personDirectory, PatientDirectory patientDirectory, EncounterHistory encounterHistory, DoctorDirectory doctorDirectory, HospitalDirectory hospitalDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        this.doctorDirectory = doctorDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.account = account;
        this.business = business;
        displayPersonTableDetails();
        displayDoctorTableDetails();
        addVerifiers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        hospitalPanel = new javax.swing.JPanel();
        doctorPanel1 = new javax.swing.JPanel();
        hospitalPortalLbl = new javax.swing.JLabel();
        HospitalnameLbl = new javax.swing.JLabel();
        hospitalLbl1 = new javax.swing.JLabel();
        cityLbl = new javax.swing.JLabel();
        create2 = new javax.swing.JButton();
        update2 = new javax.swing.JButton();
        delete2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        ddCity1 = new javax.swing.JComboBox<>();
        ddCommunity1 = new javax.swing.JComboBox<>();
        hospitalDropdown1 = new javax.swing.JComboBox<>();
        clear2 = new javax.swing.JButton();
        doctorPanel = new javax.swing.JPanel();
        doctorPanel2 = new javax.swing.JPanel();
        addDocLbl1 = new javax.swing.JLabel();
        doctorNameLbl1 = new javax.swing.JLabel();
        doctorName1 = new javax.swing.JTextField();
        hospitalDropdown2 = new javax.swing.JComboBox<>();
        hospitalLbl2 = new javax.swing.JLabel();
        createDoctorBtn1 = new javax.swing.JButton();
        updateBtn1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblDoctor1 = new javax.swing.JTable();
        clear3 = new javax.swing.JButton();
        hospitalLbl3 = new javax.swing.JLabel();
        ddCommunity2 = new javax.swing.JComboBox<>();
        cityLbl1 = new javax.swing.JLabel();
        ddCity2 = new javax.swing.JComboBox<>();
        patientPanel = new javax.swing.JPanel();
        lblCommunity = new javax.swing.JLabel();
        ddHouseNumber = new javax.swing.JComboBox<>();
        lblAddress = new javax.swing.JLabel();
        ddCommunity = new javax.swing.JComboBox<>();
        ddCity = new javax.swing.JComboBox<>();
        lblAge = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblHouseNumber = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        create1 = new javax.swing.JButton();
        update1 = new javax.swing.JButton();
        delete1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        clear = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        leftPanel.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        hospitalPanel.setBackground(new java.awt.Color(255, 255, 255));

        doctorPanel1.setBackground(new java.awt.Color(255, 255, 255));

        hospitalPortalLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        hospitalPortalLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hospitalPortalLbl.setText("Hospital Portal");

        HospitalnameLbl.setText("Hospital Name:");

        hospitalLbl1.setText("Community:");

        cityLbl.setText("City:");

        create2.setBackground(new java.awt.Color(51, 153, 255));
        create2.setForeground(new java.awt.Color(255, 255, 255));
        create2.setText("Create");
        create2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create2ActionPerformed(evt);
            }
        });

        update2.setBackground(new java.awt.Color(51, 153, 255));
        update2.setForeground(new java.awt.Color(255, 255, 255));
        update2.setText("Update");
        update2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update2ActionPerformed(evt);
            }
        });

        delete2.setBackground(new java.awt.Color(51, 153, 255));
        delete2.setForeground(new java.awt.Color(255, 255, 255));
        delete2.setText("Delete");
        delete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete2ActionPerformed(evt);
            }
        });

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital Id", "Hospital Name", "Community", "City"
            }
        ));
        hospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hospitalTable);

        ddCity1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCity1ActionPerformed(evt);
            }
        });

        ddCommunity1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "Mission Main", "Mission Hill" }));
        ddCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunity1ActionPerformed(evt);
            }
        });

        hospitalDropdown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Hospital", "Hospital A", "Hospital B", "Hospital C", "Hospital D" }));
        hospitalDropdown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalDropdown1ActionPerformed(evt);
            }
        });

        clear2.setBackground(new java.awt.Color(51, 153, 255));
        clear2.setForeground(new java.awt.Color(255, 255, 255));
        clear2.setText("Clear");
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doctorPanel1Layout = new javax.swing.GroupLayout(doctorPanel1);
        doctorPanel1.setLayout(doctorPanel1Layout);
        doctorPanel1Layout.setHorizontalGroup(
            doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addGap(50, 50, 50))
                    .addGroup(doctorPanel1Layout.createSequentialGroup()
                        .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(create2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(update2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorPanel1Layout.createSequentialGroup()
                                .addComponent(HospitalnameLbl)
                                .addGap(63, 63, 63)
                                .addComponent(hospitalDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hospitalLbl1)
                                    .addComponent(cityLbl))
                                .addGap(64, 64, 64)
                                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ddCommunity1, 0, 288, Short.MAX_VALUE)
                                    .addComponent(ddCity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50))
                            .addGroup(doctorPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(delete2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(hospitalPortalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        doctorPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clear2, create2, delete2, update2});

        doctorPanel1Layout.setVerticalGroup(
            doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(hospitalPortalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalLbl1)
                    .addComponent(ddCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HospitalnameLbl))
                .addGap(18, 18, 18)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLbl)
                    .addComponent(ddCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update2)
                    .addComponent(delete2)
                    .addComponent(clear2))
                .addContainerGap(275, Short.MAX_VALUE))
        );

        doctorPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clear2, create2, delete2, update2});

        javax.swing.GroupLayout hospitalPanelLayout = new javax.swing.GroupLayout(hospitalPanel);
        hospitalPanel.setLayout(hospitalPanelLayout);
        hospitalPanelLayout.setHorizontalGroup(
            hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 856, Short.MAX_VALUE)
            .addGroup(hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(doctorPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hospitalPanelLayout.setVerticalGroup(
            hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 647, Short.MAX_VALUE)
            .addGroup(hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(doctorPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hospital", hospitalPanel);

        doctorPanel.setBackground(new java.awt.Color(255, 255, 255));

        doctorPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addDocLbl1.setText("ADD DOCTOR");

        doctorNameLbl1.setText("Doctor Name:");

        doctorName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorName1ActionPerformed(evt);
            }
        });

        hospitalDropdown2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Hospital", "Hospital A", "Hospital B", "Hospital C", "Hospital D" }));
        hospitalDropdown2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalDropdown2ActionPerformed(evt);
            }
        });

        hospitalLbl2.setText("Hospital");

        createDoctorBtn1.setBackground(new java.awt.Color(51, 153, 255));
        createDoctorBtn1.setText("Create");
        createDoctorBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDoctorBtn1ActionPerformed(evt);
            }
        });

        updateBtn1.setBackground(new java.awt.Color(51, 153, 255));
        updateBtn1.setText("Update");
        updateBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtn1ActionPerformed(evt);
            }
        });

        tblDoctor1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Doctor Id", "Doctor Name", "Hospital", "Community", "City"
            }
        ));
        tblDoctor1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctor1MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblDoctor1);

        clear3.setBackground(new java.awt.Color(51, 153, 255));
        clear3.setText("Clear");
        clear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear3ActionPerformed(evt);
            }
        });

        hospitalLbl3.setText("Community:");

        ddCommunity2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "Mission Main", "Mission Hill" }));
        ddCommunity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunity2ActionPerformed(evt);
            }
        });

        cityLbl1.setText("City:");

        ddCity2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCity2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doctorPanel2Layout = new javax.swing.GroupLayout(doctorPanel2);
        doctorPanel2.setLayout(doctorPanel2Layout);
        doctorPanel2Layout.setHorizontalGroup(
            doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addGap(97, 97, 97))
            .addGroup(doctorPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorPanel2Layout.createSequentialGroup()
                        .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorPanel2Layout.createSequentialGroup()
                                .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doctorNameLbl1)
                                    .addComponent(hospitalLbl2))
                                .addGap(89, 89, 89)
                                .addComponent(hospitalDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorPanel2Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(doctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                        .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalLbl3)
                            .addComponent(cityLbl1))
                        .addGap(64, 64, 64)
                        .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ddCommunity2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ddCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(152, 152, 152))
                    .addGroup(doctorPanel2Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(createDoctorBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(updateBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(clear3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(doctorPanel2Layout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(addDocLbl1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        doctorPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clear3, createDoctorBtn1, updateBtn1});

        doctorPanel2Layout.setVerticalGroup(
            doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(addDocLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalLbl3)
                    .addComponent(ddCommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorNameLbl1)
                    .addComponent(doctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLbl1)
                    .addComponent(ddCity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalLbl2)
                    .addComponent(hospitalDropdown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(doctorPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDoctorBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn1)
                    .addComponent(clear3))
                .addContainerGap(282, Short.MAX_VALUE))
        );

        doctorPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clear3, createDoctorBtn1, updateBtn1});

        javax.swing.GroupLayout doctorPanelLayout = new javax.swing.GroupLayout(doctorPanel);
        doctorPanel.setLayout(doctorPanelLayout);
        doctorPanelLayout.setHorizontalGroup(
            doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doctorPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        doctorPanelLayout.setVerticalGroup(
            doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doctorPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Doctor", doctorPanel);

        patientPanel.setBackground(new java.awt.Color(255, 255, 255));

        lblCommunity.setText("Community:");

        ddHouseNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose House Number", "1", "2", "3", "4", "5", "6" }));

        lblAddress.setText("Address:");

        ddCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "MissionMain", "MissionHill" }));
        ddCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunityActionPerformed(evt);
            }
        });

        ddCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCityActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });

        lblName.setText("Name:");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblHouseNumber.setText("House Number:");

        lblZipCode.setText("ZipCode:");

        lblCity.setText("City:");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PATIENT PORTAL");

        create1.setBackground(new java.awt.Color(51, 153, 255));
        create1.setText("Create");
        create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create1ActionPerformed(evt);
            }
        });

        update1.setBackground(new java.awt.Color(51, 153, 255));
        update1.setText("Update");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });

        delete1.setBackground(new java.awt.Color(51, 153, 255));
        delete1.setText("Delete");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "City", "Community", "ID", "Apartment Number", "Address", "Zip Code"
            }
        ));
        tblPerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblPerson);

        clear.setBackground(new java.awt.Color(51, 153, 255));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout patientPanelLayout = new javax.swing.GroupLayout(patientPanel);
        patientPanel.setLayout(patientPanelLayout);
        patientPanelLayout.setHorizontalGroup(
            patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblZipCode)
                            .addComponent(lblCommunity)
                            .addComponent(lblHouseNumber))
                        .addGap(12, 12, 12)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ddCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ddHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ddCity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(update1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        patientPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCommunity, lblHouseNumber, lblName, lblZipCode});

        patientPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ddCommunity, ddHouseNumber, txtName, txtZipCode});

        patientPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ddCity, txtAddress, txtAge});

        patientPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clear, create1, delete1, update1});

        patientPanelLayout.setVerticalGroup(
            patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity)
                            .addComponent(ddCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblZipCode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCommunity)
                            .addComponent(ddCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouseNumber)
                            .addComponent(ddHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete1)
                    .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update1)
                    .addComponent(clear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        patientPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clear, create1, delete1, update1});

        jTabbedPane1.addTab("Patient", patientPanel);

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(leftPanel);

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 678, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(rightPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:

        txtAge.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtZipCode.setText("");
        ddHouseNumber.setSelectedIndex(0);
        ddCommunity.setSelectedIndex(0);
        ddCity.setSelectedIndex(0);
    }//GEN-LAST:event_clearActionPerformed

    private void tblPersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();

        Person selectPerson = personDirectory.getListOfPerson().get(selectedRowIndex);

        txtAge.setText(String.valueOf(selectPerson.getAgeOfPerson()));
        txtName.setText(selectPerson.getNameOfPerson());
        txtAddress.setText(selectPerson.getHouse().getStreetName());
        txtZipCode.setText(String.valueOf(selectPerson.getHouse().getZipCode()));
        ddCity.setSelectedItem(selectPerson.getHouse().getNameOfCity());
        ddCommunity.setSelectedItem(selectPerson.getHouse().getNameOfCommunity());
        ddHouseNumber.setSelectedItem(selectPerson.getHouse().getApartmentNumber());
    }//GEN-LAST:event_tblPersonMouseClicked

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblPerson.getSelectedRow();
        Person selectPerson = personDirectory.getListOfPerson().get(selectedRowIndex);

        personDirectory.deletePerson(selectPerson);
        displayPersonTableDetails();
    }//GEN-LAST:event_delete1ActionPerformed

    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();

        model.setValueAt(txtName.getText(), selectedRowIndex, 0);
        model.setValueAt(txtAge.getText(), selectedRowIndex, 1);
        model.setValueAt(ddCity.getSelectedItem(), selectedRowIndex, 2);
        model.setValueAt(ddCommunity.getSelectedItem(), selectedRowIndex, 3);
        model.setValueAt(ddHouseNumber.getSelectedItem(), selectedRowIndex, 5);
        model.setValueAt(txtAddress.getText(), selectedRowIndex, 6);
        model.setValueAt(txtZipCode.getText(), selectedRowIndex, 7);
    }//GEN-LAST:event_update1ActionPerformed

    private void create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create1ActionPerformed
        // TODO add your handling code here:

        //Save Patient Profile --> System Admin
        if (txtAddress.getText().isEmpty() || txtAge.getText().isEmpty()
            || txtZipCode.getText().isEmpty() || ddCity.getSelectedItem() == null
            || ddCommunity.getSelectedItem() == null || ddHouseNumber.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "All fields are Mandatory");
        } else {

            Person person = personDirectory.addNewPerson();
            House house = new House();

            person.setIdOfPerson(getUniqueIdPerson());
            person.setAgeOfPerson(Integer.parseInt(txtAge.getText()));
            person.setNameOfPerson(txtName.getText());

            house.setStreetName(txtAddress.getText());
            house.setApartmentNumber(ddHouseNumber.getSelectedItem().toString());
            house.setNameOfCity(ddCity.getSelectedItem().toString());
            house.setNameOfCommunity(ddCommunity.getSelectedItem().toString());
            house.setZipCode(Integer.parseInt(txtZipCode.getText()));

            person.setHouse(house);
            JOptionPane.showMessageDialog(this, "Profile Saved");

            displayPersonTableDetails();
        }

        txtAge.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtZipCode.setText("");
        ddHouseNumber.setSelectedIndex(0);
        ddCommunity.setSelectedIndex(0);
        ddCity.setSelectedItem(0);
    }//GEN-LAST:event_create1ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void ddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCityActionPerformed

    private void ddCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunityActionPerformed

    private void ddCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCity2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCity2ActionPerformed

    private void ddCommunity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunity2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunity2ActionPerformed

    private void clear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear3ActionPerformed
        // TODO add your handling code here:

        doctorName1.setText("");
        ddCommunity2.setSelectedIndex(0);
        ddCity2.setSelectedIndex(0);
        hospitalDropdown2.setSelectedIndex(0);
    }//GEN-LAST:event_clear3ActionPerformed

    private void tblDoctor1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctor1MouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = tblDoctor1.getSelectedRow();
        Doctor selectDoctor = doctorDirectory.getListOfDoctors().get(selectedRowIndex);

        doctorName1.setText(selectDoctor.getDoctorName());
        hospitalDropdown2.setSelectedItem(selectDoctor.getHospital().getHospitalName());
        ddCommunity2.setSelectedItem(selectDoctor.getHospital().getCommunity());
        ddCity2.setSelectedItem(selectDoctor.getHospital().getCity());
    }//GEN-LAST:event_tblDoctor1MouseClicked

    private void updateBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctor1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblDoctor1.getModel();
        model.setValueAt(doctorName1.getText(), selectedRowIndex, 1);
        model.setValueAt(hospitalDropdown2.getSelectedItem(), selectedRowIndex, 2);
        model.setValueAt(ddCity2.getSelectedItem(), selectedRowIndex, 3);
        model.setValueAt(ddCommunity2.getSelectedItem(), selectedRowIndex, 4);
    }//GEN-LAST:event_updateBtn1ActionPerformed

    private void createDoctorBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDoctorBtn1ActionPerformed
        // TODO add your handling code here:

        String name = doctorName1.getText();
        String hospitalname = hospitalDropdown2.getSelectedItem().toString();
        String cityName = ddCity2.getSelectedItem().toString();
        String communityName = ddCommunity2.getSelectedItem().toString();

        if (name.length() == 0 ) {

            JOptionPane.showMessageDialog(this, "Doctor Profile Saved");

        } else {
            Doctor doc = doctorDirectory.addNewDoctor();
            Hospital hospital = new Hospital();

            doc.setDoctorId(getUniqueIdDoctor());
            doc.setDoctorName(name);
            hospital.setHospitalName(hospitalname);
            hospital.setCommunity(communityName);
            hospital.setCity(cityName);
            doc.setHospital(hospital);
            JOptionPane.showMessageDialog(this, "Doctor Profile Saved");
            displayDoctorTableDetails();
        }

        doctorName1.setText("");
        hospitalDropdown2.setSelectedIndex(0);
        ddCity2.setSelectedIndex(0);
        ddCommunity2.setSelectedIndex(0);
    }//GEN-LAST:event_createDoctorBtn1ActionPerformed

    private void hospitalDropdown2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalDropdown2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalDropdown2ActionPerformed

    private void doctorName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorName1ActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
        // TODO add your handling code here:
        //hospitalid.setText("");
        ddCommunity1.setSelectedIndex(0);
        ddCity1.setSelectedIndex(0);
        hospitalDropdown1.setSelectedIndex(0);
    }//GEN-LAST:event_clear2ActionPerformed

    private void hospitalDropdown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalDropdown1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalDropdown1ActionPerformed

    private void ddCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunity1ActionPerformed

    private void ddCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCity1ActionPerformed

    private void hospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalTableMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = hospitalTable.getSelectedRow();
        Hospital selectHospital = hospitalDirectory.getListOfHospital().get(selectedRowIndex);

        //hospitalid.setText(String.valueOf(selectHospital.getHospitalId()));
        ddCity1.setSelectedItem(selectHospital.getCity());
        ddCommunity1.setSelectedItem(selectHospital.getCommunity());
        hospitalDropdown1.setSelectedItem(selectHospital.getHospitalName());
    }//GEN-LAST:event_hospitalTableMouseClicked

    private void delete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = hospitalTable.getSelectedRow();
        Hospital selectHospital = hospitalDirectory.getListOfHospital().get(selectedRowIndex);

        hospitalDirectory.deleteDoctor(selectHospital);
        displayHospitalTableDetails();
    }//GEN-LAST:event_delete2ActionPerformed

    private void update2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = hospitalTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        //model.setValueAt(hospitalid.getText(), selectedRowIndex, 0);
        model.setValueAt(hospitalDropdown1.getSelectedItem().toString(), selectedRowIndex, 1);
        model.setValueAt(ddCommunity1.getSelectedItem().toString(), selectedRowIndex, 2);
        model.setValueAt(ddCity1.getSelectedItem().toString(), selectedRowIndex, 3);
    }//GEN-LAST:event_update2ActionPerformed

    private void create2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create2ActionPerformed
        // TODO add your handling code here:
        Hospital hospital = hospitalDirectory.addNewHospital();

        //hospital.setHospitalId(hospitalid.getText());
        hospital.setCommunity(ddCommunity1.getSelectedItem().toString());
        hospital.setCity(ddCity1.getSelectedItem().toString());
        hospital.setHospitalName(hospitalDropdown1.getSelectedItem().toString());

        JOptionPane.showMessageDialog(this, "Hospital Added");

        displayHospitalTableDetails();

        //hospitalid.setText("");
        ddCommunity1.setSelectedIndex(0);
        ddCity1.setSelectedIndex(0);
        hospitalDropdown1.setSelectedIndex(0);
    }//GEN-LAST:event_create2ActionPerformed

    private void addVerifiers() {
        InputVerifier integerVerifier = new VerifyNumber();       
        txtAge.setInputVerifier(integerVerifier);
        txtZipCode.setInputVerifier(integerVerifier);
        
        InputVerifier stringVerifier = new VerifyString();
        txtName.setInputVerifier(stringVerifier);
        txtAddress.setInputVerifier(stringVerifier);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HospitalnameLbl;
    private javax.swing.JLabel addDocLbl1;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JLabel cityLbl1;
    private javax.swing.JButton clear;
    private javax.swing.JButton clear2;
    private javax.swing.JButton clear3;
    private javax.swing.JButton create1;
    private javax.swing.JButton create2;
    private javax.swing.JButton createDoctorBtn1;
    private javax.swing.JComboBox<String> ddCity;
    private javax.swing.JComboBox<String> ddCity1;
    private javax.swing.JComboBox<String> ddCity2;
    private javax.swing.JComboBox<String> ddCommunity;
    private javax.swing.JComboBox<String> ddCommunity1;
    private javax.swing.JComboBox<String> ddCommunity2;
    private javax.swing.JComboBox<String> ddHouseNumber;
    private javax.swing.JButton delete1;
    private javax.swing.JButton delete2;
    private javax.swing.JTextField doctorName1;
    private javax.swing.JLabel doctorNameLbl1;
    private javax.swing.JPanel doctorPanel;
    private javax.swing.JPanel doctorPanel1;
    private javax.swing.JPanel doctorPanel2;
    private javax.swing.JComboBox<String> hospitalDropdown1;
    private javax.swing.JComboBox<String> hospitalDropdown2;
    private javax.swing.JLabel hospitalLbl1;
    private javax.swing.JLabel hospitalLbl2;
    private javax.swing.JLabel hospitalLbl3;
    private javax.swing.JPanel hospitalPanel;
    private javax.swing.JLabel hospitalPortalLbl;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblHouseNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel patientPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTable tblDoctor1;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JButton update1;
    private javax.swing.JButton update2;
    private javax.swing.JButton updateBtn1;
    // End of variables declaration//GEN-END:variables

    private void displayPersonTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblPerson.getModel();
        tblmodel.setRowCount(0);
        for (Person person : personDirectory.getListOfPerson()) {
            Object[] row = new Object[10];
            row[0] = person.getNameOfPerson();
            row[1] = person.getAgeOfPerson();
            row[2] = person.getHouse().getNameOfCity();
            row[3] = person.getHouse().getNameOfCommunity();
            row[4] = person.getIdOfPerson();
            row[5] = person.getHouse().getApartmentNumber();
            row[6] = person.getHouse().getStreetName();
            row[7] = person.getHouse().getZipCode();
            tblmodel.addRow(row);
        }
    }

    private void displayDoctorTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblDoctor1.getModel();
        tblmodel.setRowCount(0);
 
        for (Doctor doc : doctorDirectory.getListOfDoctors()) {
            Object[] row = new Object[10];
            row[0] = doc.getDoctorId();
            row[1] = doc.getDoctorName();
            row[2] = doc.getHospital().getHospitalName();
            row[3] = doc.getHospital().getCommunity();
            row[4] = doc.getHospital().getCity();
            tblmodel.addRow(row);
        }
    }
    
    private void displayHospitalTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) hospitalTable.getModel();
        tblmodel.setRowCount(0);
       
        Object[] row = new Object[4];
        for (Hospital hospital : hospitalDirectory.getListOfHospital()) {
            row[0] = hospital.getHospitalId();
            row[1] = hospital.getHospitalName();
            row[2] = hospital.getCommunity();
            row[3] = hospital.getCity();
            
            tblmodel.addRow(row);
        }
    }
        
    private int getUniqueIdDoctor() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Doctor doctor : doctorDirectory.getListOfDoctors()){
            if(doctor.getDoctorId()== randomPIN){
            getUniqueIdDoctor();
            }
        }
        return randomPIN;
    }
    
    private int getUniqueIdPerson() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Person person : personDirectory.getListOfPerson()){
            if(person.getIdOfPerson()== randomPIN){
            getUniqueIdPerson();
            }
        }
        return randomPIN;
    }
      
}
